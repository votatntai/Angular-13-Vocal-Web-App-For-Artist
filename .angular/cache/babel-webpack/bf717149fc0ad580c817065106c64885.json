{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.baseUrl;\n      this.user = {\n        id: '',\n        username: '',\n        email: '',\n        phone: '',\n        avatar: '',\n        firstName: '',\n        lastName: '',\n        gender: '',\n        role: '',\n        status: '',\n        token: ''\n      };\n      this.userGlobal = new BehaviorSubject(this.user);\n      this.httpHeaders = this.getHttpHeaders();\n    }\n\n    getHttpHeaders() {\n      var data = localStorage.getItem('USER');\n      var headers = new HttpHeaders();\n\n      if (data) {\n        var user = JSON.parse(data);\n        headers = headers.set('Content-Type', 'application/json; charset=utf-8');\n        headers = headers.set('Authorization', 'Bearer ' + user.token);\n      }\n\n      return headers;\n    }\n\n    isAuth() {\n      return localStorage.getItem('USER') ? true : false;\n    }\n\n    getUserGlobal() {\n      return this.userGlobal.asObservable();\n    }\n\n    setUserGlobal(user) {\n      this.userGlobal.next(user);\n      localStorage.setItem('USER', JSON.stringify(user));\n    }\n\n    signIn(auth) {\n      return this.http.post(this.baseUrl + '/api/v1/authenticate/artist', auth, {\n        observe: 'response'\n      });\n    }\n\n    signUp(artist) {\n      return this.http.post(this.baseUrl + '/api/v1/artists/register', artist, {\n        observe: 'response'\n      });\n    }\n\n    changePassword(email, newPassword, currentPassword) {\n      var body = {\n        email: email,\n        password: newPassword,\n        oldPassword: currentPassword\n      };\n      return this.http.put(this.baseUrl + '/api/v1/artists/password', body, {\n        headers: this.httpHeaders,\n        observe: 'response'\n      });\n    }\n\n    forgetPassword(email) {\n      var body = {\n        email: email,\n        role: \"Artist\"\n      };\n      return this.http.post(this.baseUrl + '/api/v1/systems/otp', body, {\n        headers: this.httpHeaders,\n        observe: 'response'\n      });\n    }\n\n    verifyPassword(body) {\n      return this.http.put(this.baseUrl + '/api/v1/artists/forget-password', body, {\n        headers: this.httpHeaders,\n        observe: 'response'\n      });\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}