{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ArtistService = /*#__PURE__*/(() => {\n  class ArtistService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.baseUrl;\n      this.artist = {\n        id: '',\n        username: '',\n        firstName: '',\n        lastName: '',\n        avatar: '',\n        email: '',\n        phone: '',\n        bio: '',\n        gender: '',\n        studio: false,\n        price: 0,\n        rate: 0,\n        status: '',\n        countries: [],\n        voiceStyles: [],\n        voiceDemos: []\n      };\n      this.artistGlobal = new BehaviorSubject(this.artist);\n      this.httpHeaders = this.getHttpHeaders();\n    }\n\n    getArtistGlobal() {\n      return this.artistGlobal.asObservable();\n    }\n\n    setArtistGlobal(artist) {\n      if (artist.avatar == '') {\n        artist.avatar = environment.defaultAvatar;\n      }\n\n      this.artistGlobal.next(artist);\n    }\n\n    getHttpHeaders() {\n      var data = localStorage.getItem('USER');\n      var headers = new HttpHeaders();\n\n      if (data) {\n        var user = JSON.parse(data);\n        headers = headers.set('Content-Type', 'application/json; charset=utf-8');\n        headers = headers.set('Authorization', 'Bearer ' + user.token);\n      }\n\n      return headers;\n    }\n\n    getArtistInfo(id) {\n      return this.http.get(this.baseUrl + \"/api/v1/artists/\", {\n        observe: 'response',\n        headers: this.httpHeaders,\n        params: {\n          id: id\n        }\n      });\n    }\n\n    updateArtistInfo(info) {\n      return this.http.post(this.baseUrl + '/api/v1/artists/update/', info, {\n        headers: this.httpHeaders,\n        observe: 'response'\n      });\n    }\n\n  }\n\n  ArtistService.ɵfac = function ArtistService_Factory(t) {\n    return new (t || ArtistService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ArtistService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ArtistService,\n    factory: ArtistService.ɵfac,\n    providedIn: 'root'\n  });\n  return ArtistService;\n})();","map":null,"metadata":{},"sourceType":"module"}