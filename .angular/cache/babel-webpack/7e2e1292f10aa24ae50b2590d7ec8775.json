{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { PasswordConfirmedValidator } from '../validators/validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction ForgetPasswordComponent_form_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 14);\n    i0.ɵɵlistener(\"ngSubmit\", function ForgetPasswordComponent_form_17_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.forgetPassword();\n    });\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵelementStart(2, \"label\", 16);\n    i0.ɵɵtext(3, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 18);\n    i0.ɵɵelementStart(6, \"button\", 19);\n    i0.ɵɵtext(7, \"Send\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.forgetPasswordForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", (ctx_r0.forgetPasswordForm.get(\"email\").touched || ctx_r0.forgetPasswordForm.get(\"email\").dirty) && ctx_r0.forgetPasswordForm.get(\"email\").errors ? \"is-invalid\" : \"\" || (ctx_r0.forgetPasswordForm.get(\"email\").touched || ctx_r0.forgetPasswordForm.get(\"email\").dirty) && !ctx_r0.forgetPasswordForm.get(\"email\").invalid ? \"is-valid\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", !ctx_r0.forgetPasswordForm.valid ? \"disabled\" : \"\");\n  }\n}\n\nfunction ForgetPasswordComponent_form_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 20);\n    i0.ɵɵlistener(\"ngSubmit\", function ForgetPasswordComponent_form_18_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.verifyPassword();\n    });\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵelementStart(2, \"label\", 16);\n    i0.ɵɵtext(3, \"Verification Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 15);\n    i0.ɵɵelementStart(6, \"label\", 16);\n    i0.ɵɵtext(7, \"New Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 15);\n    i0.ɵɵelementStart(10, \"label\", 16);\n    i0.ɵɵtext(11, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 18);\n    i0.ɵɵelementStart(14, \"button\", 19);\n    i0.ɵɵtext(15, \"Confirm\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.verifyPasswordForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", (ctx_r1.verifyPasswordForm.get(\"otp\").touched || ctx_r1.verifyPasswordForm.get(\"otp\").dirty) && ctx_r1.verifyPasswordForm.get(\"otp\").errors ? \"is-invalid\" : \"\" || (ctx_r1.verifyPasswordForm.get(\"otp\").touched || ctx_r1.verifyPasswordForm.get(\"otp\").dirty) && !ctx_r1.verifyPasswordForm.get(\"otp\").invalid ? \"is-valid\" : \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", (ctx_r1.verifyPasswordForm.get(\"newPassword\").touched || ctx_r1.verifyPasswordForm.get(\"newPassword\").dirty) && ctx_r1.verifyPasswordForm.get(\"newPassword\").errors ? \"is-invalid\" : \"\" || (ctx_r1.verifyPasswordForm.get(\"newPassword\").touched || ctx_r1.verifyPasswordForm.get(\"newPassword\").dirty) && !ctx_r1.verifyPasswordForm.get(\"newPassword\").invalid ? \"is-valid\" : \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", (ctx_r1.verifyPasswordForm.get(\"rePassword\").touched || ctx_r1.verifyPasswordForm.get(\"rePassword\").dirty) && ctx_r1.verifyPasswordForm.get(\"rePassword\").errors ? \"is-invalid\" : \"\" || (ctx_r1.verifyPasswordForm.get(\"rePassword\").touched || ctx_r1.verifyPasswordForm.get(\"rePassword\").dirty) && !ctx_r1.verifyPasswordForm.get(\"rePassword\").invalid ? \"is-valid\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", !ctx_r1.verifyPasswordForm.valid ? \"disabled\" : \"\");\n  }\n}\n\nexport let ForgetPasswordComponent = /*#__PURE__*/(() => {\n  class ForgetPasswordComponent {\n    constructor(form, authService, router) {\n      this.form = form;\n      this.authService = authService;\n      this.router = router;\n      this.isSent = false;\n      this.forgetPasswordForm = this.form.group({\n        email: ['benny20001456@gmail.com', [Validators.required, Validators.email]]\n      });\n      this.verifyPasswordForm = this.form.group({\n        otp: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6)]],\n        newPassword: ['', Validators.required],\n        rePassword: ['', Validators.required]\n      }, {\n        validator: PasswordConfirmedValidator('newPassword', 'rePassword')\n      });\n    }\n\n    ngOnInit() {}\n\n    forgetPassword() {\n      if (this.forgetPasswordForm.valid) {\n        this.authService.forgetPassword(this.forgetPasswordForm.value['email']).subscribe(result => {\n          console.log(result);\n\n          if (result.status == 200) {\n            this.isSent = true;\n          } else {\n            console.warn(result);\n          }\n        }, error => {\n          if (error.status == 400) {\n            console.warn('Thử lại sau 5 phút');\n          }\n        });\n      }\n    }\n\n    verifyPassword() {\n      if (this.verifyPasswordForm.valid) {\n        var body = {\n          email: this.forgetPasswordForm.value['email'],\n          otp: this.verifyPasswordForm.value['otp'],\n          newPassword: this.verifyPasswordForm.value['newPassword']\n        };\n        this.authService.verifyPassword(body).subscribe(result => {\n          if (result.status == 200) {\n            this.router.navigate(['']);\n          }\n        });\n      }\n    }\n\n  }\n\n  ForgetPasswordComponent.ɵfac = function ForgetPasswordComponent_Factory(t) {\n    return new (t || ForgetPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  ForgetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgetPasswordComponent,\n    selectors: [[\"app-forget-password\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"section\", \"register\", \"min-vh-100\", \"d-flex\", \"flex-column\", \"align-items-center\", \"justify-content-center\", \"py-4\"], [1, \"row\", \"justify-content-center\"], [1, \"col-lg-4\", \"col-md-6\", \"d-flex\", \"flex-column\", \"align-items-center\", \"justify-content-center\"], [1, \"d-flex\", \"justify-content-center\", \"py-4\"], [\"routerLink\", \"\", 1, \"logo\", \"d-flex\", \"align-items-center\", \"w-auto\"], [1, \"d-none\", \"d-lg-block\", \"text-uppercase\"], [1, \"card\", \"mb-3\"], [1, \"card-body\"], [1, \"pt-4\", \"pb-2\"], [1, \"card-title\", \"text-center\", \"pb-0\", \"fs-4\"], [1, \"text-center\", \"small\"], [\"class\", \"row g-3\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"row g-3 pt-2\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"row\", \"g-3\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col-12\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [1, \"col-12\", \"mt-4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\", \"w-100\", 3, \"ngClass\"], [1, \"row\", \"g-3\", \"pt-2\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"id\", \"otp\", \"formControlName\", \"otp\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"id\", \"newPassword\", \"formControlName\", \"newPassword\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"id\", \"rePassword\", \"formControlName\", \"rePassword\", 1, \"form-control\", 3, \"ngClass\"]],\n    template: function ForgetPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"main\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"section\", 1);\n        i0.ɵɵelementStart(3, \"div\", 0);\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"a\", 5);\n        i0.ɵɵelementStart(8, \"span\", 6);\n        i0.ɵɵtext(9, \"Vocal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelementStart(13, \"h5\", 10);\n        i0.ɵɵtext(14, \"Forget Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\", 11);\n        i0.ɵɵtext(16, \"Enter your email to receive the verification code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, ForgetPasswordComponent_form_17_Template, 8, 3, \"form\", 12);\n        i0.ɵɵtemplate(18, ForgetPasswordComponent_form_18_Template, 16, 5, \"form\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isSent);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSent);\n      }\n    },\n    directives: [i3.RouterLinkWithHref, i4.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgClass],\n    styles: [\"\"]\n  });\n  return ForgetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}