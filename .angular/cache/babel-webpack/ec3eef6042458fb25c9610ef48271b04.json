{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.baseUrl;\n      this.user = new Subject();\n    }\n\n    getUser() {\n      return this.user.asObservable();\n    }\n\n    updateUser(user) {\n      this.user.next(user);\n    }\n\n    get currentUser() {\n      return localStorage.getItem('USER');\n    }\n\n    signIn(username, password) {\n      var artist = {\n        username: username,\n        password: password\n      };\n      return this.http.post(this.baseUrl + '/api/v1/authenticate/artist', artist);\n    }\n\n    changePassword(email, password) {\n      var change = {\n        email: email,\n        password: password\n      };\n      return this.http.put(this.baseUrl + '/api/v1/artists/password', change, {\n        observe: 'response'\n      });\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}